upstream express {
  server api:8000;
}

upstream react {
  server webui:8080;
}

# ssl_password_file /etc/ssl/certs/password.txt;

server {
  # listen 80;
  # listen [::]:80;
  # listen 443 ssl;
  # listen [::]:443 ssl;

  # server_name example.com www.example.com;
  # ssl_certificate /etc/ssl/certs/certificate.crt;
  # ssl_certificate_key /etc/ssl/certs/key.key;
  
  # if ($scheme = "http") {
  #   return 301 https://$server_name$request_uri;
  # }

  location / {
    try_files @uri @proxy_webui;
  }

  location @proxy_webui {
    proxy_pass http://react;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
  }

  location /api {
    try_files $uri @proxy_api;
  }

  location @proxy_api {
    proxy_pass http://express;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_redirect off;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;
  }
}
